#version 460

#extension GL_GOOGLE_include_directive : require
#include "precoscat.hpp"

layout(local_size_x_id = 0, local_size_y_id = 1) in;
layout(set = 0, binding = 0) uniform AtmosphereUBO {
	mat4 _;
	Atmosphere atmosphere;
};
layout(set = 0, binding = 1) uniform sampler2D transTex;
layout(set = 0, binding = 2) uniform sampler3D scatRTex;
layout(set = 0, binding = 3) uniform sampler3D scatMTex;
layout(set = 0, binding = 4) uniform sampler3D scatMultiTex; // last iteration
layout(set = 0, binding = 5) writeonly uniform image2D outGround;

layout(push_constant) uniform PCR {
	uint scatOrder;
};

void main() {
	uvec2 size = imageSize(outGround);
	uvec2 pixel = gl_GlobalInvocationID.xy;
	if(pixel.x >= size.x || pixel.y >= size.y) {
		return;
	}

	vec2 unitRange = pixel / (size - 1.f);
	ARay toSun = rayFromGroundTexUnit(atmosphere, unitRange);
	vec3 ground = computeIndirectIrradiance(atmosphere,
		scatRTex, scatMTex, scatMultiTex, toSun, scatOrder);
	ground += computeDirectIrradiance(atmosphere, transTex, toSun);

	imageStore(outGround, ivec2(pixel), vec4(ground, 1.0));
}
