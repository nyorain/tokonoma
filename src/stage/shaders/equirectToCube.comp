#version 450

layout(local_size_x_id = 0, local_size_y_id = 1) in;

layout(push_constant) uniform Face {
	vec3 x;
	uint face;
	vec3 y;
	float _2; // padding
	vec3 z; // normal, cube map face
} dir;

layout(set = 0, binding = 0, rgba16f) uniform writeonly imageCube outCol;
layout(set = 0, binding = 1) uniform sampler2D equirectMap;

const vec2 invAtan = vec2(0.1591, 0.3183);
vec2 equirectTexCoord(vec3 v) {
    vec2 uv = vec2(atan(v.z, v.x), asin(v.y));
    uv *= invAtan;
    uv += 0.5;
    return uv;
}

void main() {		
	uvec2 pixel = gl_GlobalInvocationID.xy;
	uvec2 size = imageSize(outCol);
	if(pixel.x >= size.x || pixel.y >= size.y) {
		return;
	}

	vec2 pixelSize = 1.f / size;
	vec2 uv = (pixel + vec2(0.5, 0.5)) * pixelSize;

	vec3 pos = normalize(dir.z + uv.x * dir.x + uv.y * dir.y);
    uv = equirectTexCoord(pos);
    vec3 color = texture(equirectMap, uv).rgb;
	imageStore(outCol, ivec3(pixel, dir.face), vec4(color, 1.0));
}

